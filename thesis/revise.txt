标题
A co-o RT tasks sch algo for partis sys on multi
研究生资料输入那还没改


改程序：处理器间的传输速率可不同
在指定边时同时指定传输速率，可以改成浮点型
矩阵中，0 表示不连通，> 0 表示联通，+oo 表示分区处于同一处理器中


缺主语 --> 被动句

英文摘要

课题背景重写

相关工作除了问题相似外，主要写近年来 SDF 的发展
例如还有 KPN 之类

综述内容扣好帽子，分好类
将本文工作与其关系写清

分区系统，写入摘要、绪论和第二章

一些用语和翻译内容 纠正，不要翻译错

我们 去掉

ti 使用之前给出形式化定义

写出本算法与一般 SDF 方法相比带来的好处
1. 周期任务额外的偏移约束
2. 将多个不相关的带有时间属性的 SDF 归入一个系统统一处理
须注意的问题
1. 时间约束与数据约束的一致性问题

时间约束三方面：
1. 周期
2. 时间限
3. 偏移
其中结点之间的 周期 比例是由 SDF 弧上起点和终点的数据产生、消耗量决定的，而后两个时间约束---时间限和偏移---则是由弧上的 Delay 决定的。
我们在 SDF 中添加虚拟结点和弧时，需保证周期性任务的时间约束的周期必须与任务之间数据约束关系相一致，否则无法调度。这个在解 SDF 的拓扑矩阵零向量空间整数解时即可判断，如果时间约束与数据约束不一致，则拓扑矩阵无解。

倒数。。。个结点 --->  最后。。。个结点

ICS 算法中，b 的使用要体现出来


从 DAG 到目标处理器平台
需要明确目标处理器平台的模型：
如全连接、部分连接
链路通信的模型，多链路可并行通信、还是一次只能同一个链路通信
前几章都与目标平台无关，仅这一章与平台相关

路由：明确是先有路由的基础上决定任务在处理器或核心上的分布


设计与实现章节：
程序流程
模块化分（即使与流程完全对应也要有所交代）
每个模块的设计、遇到的问题、解决


程序验证
针对每个情况，给出 2D 调度分布图：
时间轴、处理器和链路轴。。。

分几种不同情况分别讨论。

2. 架构不同：
如 处理器目标架构不同（全连接、部分连接）

4. 任务间周期比：
任务周期差距较大（10:1 或是 4:5）

3. 通信与计算比：
通信量 >> 计算时间
计算时间 >> 通信量

1. 功能性：
多个 SDF 各自周期不同、连成一个大系统
单个 SDF 任务内偏移或时间限不同


演示：
自动生成 2D 调度分布图



